#!/usr/bin/env python

Import("env")
Import("env_modules")

env_rnnoise = env_modules.Clone()

# Thirdparty source files

# thirdparty_obj = []

# if env["builtin_rnnoise"]:
#     thirdparty_dir = "#thirdparty/rnnoise/"
#     thirdparty_sources = [
#         "bitwise.c",
#         "framing.c",
#     ]
#     thirdparty_sources = [thirdparty_dir + file for file in thirdparty_sources]

#     env_rnnoise.Prepend(CPPPATH=[thirdparty_dir])

#     env_thirdparty = env_rnnoise.Clone()
#     env_thirdparty.disable_warnings()
#     env_thirdparty.add_source_files(thirdparty_obj, thirdparty_sources)
#     env.modules_sources += thirdparty_obj


# # Godot source files

module_obj = []

env_rnnoise.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

# # Needed to force rebuilding the module files when the thirdparty library is updated.
# env.Depends(module_obj, thirdparty_obj)


env_rnnoise.Append(CPPPATH=["#thirdparty/rnnoise"])

env.Append(LIBPATH=['../../thirdparty/rnnoise/build'])
env.Append(LIBS=['rnnoise'])
